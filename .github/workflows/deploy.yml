name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -euo pipefail
            # ---- Config ----
            APP_DIR="/var/www/smoothieking"
            REPO_SSH="git@github.com:Branding101/smoothie-king-catering.git"
            SERVICE="smoothieking"
            NODE_VERSION_LTS_SETUP="https://deb.nodesource.com/setup_lts.x"

            echo "==> Ensure base packages"
            sudo apt-get update -y
            sudo apt-get install -y curl ca-certificates gnupg git build-essential nginx

            echo "==> Ensure Node.js LTS + npm"
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL ${NODE_VERSION_LTS_SETUP} | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            node -v
            npm -v

            echo "==> Ensure PM2"
            if ! command -v pm2 >/dev/null 2>&1; then
              sudo npm i -g pm2
              sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u ${USER} --hp ${HOME} >/dev/null 2>&1 || true
            fi
            pm2 -v

            echo "==> Create app directory & permissions"
            sudo mkdir -p "${APP_DIR}"
            sudo chown -R "${USER}:${USER}" "${APP_DIR}"

            echo "==> Fetch source"
            if [ ! -d "${APP_DIR}/.git" ]; then
              git clone "${REPO_SSH}" "${APP_DIR}"
            else
              cd "${APP_DIR}"
              git fetch --prune origin
            fi

            echo "==> Checkout pushed commit to avoid drift"
            cd "${APP_DIR}"
            git checkout -B main "origin/main"

            echo "==> Install deps"
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi

            echo "==> Build"
            npm run build

            echo "==> Run with PM2"
            if pm2 list | grep -q "${SERVICE}"; then
              pm2 reload "${SERVICE}"
            else
              pm2 start npm --name "${SERVICE}" -- start
            fi
            pm2 save

            echo "==> Reload nginx if present"
            sudo nginx -t && sudo systemctl reload nginx || true

            echo "==> Done."

